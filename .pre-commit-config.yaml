# See https://pre-commit.com for more information
# Run `pre-commit install` to install the git hooks

repos:
-   repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
    -   id: trailing-whitespace
    -   id: end-of-file-fixer
    -   id: check-yaml
    -   id: check-json
    -   id: check-merge-conflict
    -   id: check-case-conflict
    -   id: debug-statements
    -   id: requirements-txt-fixer
    -   id: mixed-line-ending
        args: [--fix=lf]
    -   id: check-added-large-files
        args: [--maxkb=500]

-   repo: https://github.com/psf/black
    rev: 23.7.0
    hooks:
    -   id: black
        language_version: python3.10
        args: [--line-length=88, --target-version=py310]

-   repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
    -   id: isort
        name: isort (python)
        args: [--profile=black, --line-length=88]

-   repo: https://github.com/pycqa/flake8
    rev: 6.1.0
    hooks:
    -   id: flake8
        additional_dependencies: [
            'flake8-bugbear==23.7.10',
            'flake8-comprehensions==3.12.0',
            'flake8-docstrings==1.7.0',
            'flake8-import-order==0.18.2',
            'pep8-naming==0.13.3',
            'dlint==0.14.0',
        ]
        args: [
            '--max-line-length=88',
            '--extend-ignore=E203,W503',  # Conflicts with Black
            '--per-file-ignores=__init__.py:F401',
        ]

-   repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.5.1
    hooks:
    -   id: mypy
        additional_dependencies: [
            'types-requests',
            'types-python-dateutil',
            'pydantic>=1.10.0',
            'types-PyYAML',
            'types-pytz',
            'types-python-slugify',
            'types-redis',
            'types-setuptools',
            'types-six',
            'types-tabulate',
            'types-toml',
            'types-tzlocal',
            'types-ujson',
        ]
        args: [--strict, --ignore-missing-imports]
        exclude: '^tests/|^setup\.py$'
        files: '\.py$'

-   repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
    -   id: bandit
        args: [--configfile=pyproject.toml]
        exclude: '^tests/|^setup\.py$'

-   repo: https://github.com/python-poetry/poetry
    rev: ''  # Use the latest version
    hooks:
    -   id: poetry-check
    -   id: poetry-export
        args: [--dev, --without-hashes, -f=requirements.txt, -o requirements-dev.txt]
        always_run: true
        pass_filenames: false

-   repo: https://github.com/commitizen-tools/commitizen
    rev: v3.5.2
    hooks:
    -   id: commitizen
        stages: [commit-msg]
        additional_dependencies: [commitizen==3.5.2]

-   repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.35.0
    hooks:
    -   id: markdownlint
        args: [--config=.markdownlint.json]
        exclude: '^CHANGELOG\.md$|^docs/|^node_modules/|^\.github/'

-   repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.0.0
    hooks:
    -   id: prettier
        types_or: [yaml, json, markdown, html, css, scss, javascript, typescript]
        exclude: '^CHANGELOG\.md$|^docs/|^node_modules/|^\.github/|^_site/'

-   repo: local
    hooks:
    -   id: pytest-check
        name: Run tests
        entry: pytest -xvs --tb=short --cov=./ --cov-report=term-missing
        language: system
        types: [python]
        pass_filenames: false
        always_run: true
        verbose: true
        additional_dependencies: [pytest, pytest-cov]

ci:
  autofix_commit_msg: 'style: format code with pre-commit hooks'
  autoupdate_commit_msg: 'chore: update pre-commit hooks'
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_schedule: weekly
  skip: [mypy, bandit]  # Skip in CI, run separately
  # Increase the timeout for slow runners
  check_timeout_seconds: 600
  check_merge_commit: false
  check_no_verify: false
  check_untracked: false
  check_strict: false
  submodules: false
